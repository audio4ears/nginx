#!/usr/bin/env bash

#------------------------------------------------------------------------------
# FUNCTIONS
#------------------------------------------------------------------------------

function svc_ctrl () {
  # @TODO find better way to consume previously defined vars
  REDHAT_RELEASE=$(grep -Eo "[0-9.]+" /etc/redhat-release \
    | awk -F. '{print $1 "." $2}');
  # determine controller
  if [[ $(echo "${REDHAT_RELEASE}>=7.0" | bc) == 0 ]]; then
    ctrl='service';
  else
    ctrl='systemctl';
  fi
  # signal service
  case $1 in
    start|stop|reload)
      $ctrl $1 $2;
      ;;
    *)
      echo "==> ERROR: unsupported request '$ctrl $1 $2'";
      exit 1;
      ;;
  esac
}

function usage () {
  cat << EOF
  Usage: $0 -(i|u)

    -u        uninstall nginx [default]
    -v        uninstall specific nginx version [default: 1.8.0]

EOF
}

#------------------------------------------------------------------------------
# ARGUEMENTS
#------------------------------------------------------------------------------

while getopts :iuv: FLAG; do
  case $FLAG in
    u|uninstall)
      app='uninstall';
      ;;
    v|version)
      ver=$OPTARG;
      ;;
    *)
      usage;
      exit 0;
      ;;
  esac
done
shift $((OPTIND-1))  #This tells getopts to move on to the next argument.

#------------------------------------------------------------------------------
# VARIABLES
#------------------------------------------------------------------------------

NGINX_DEFAULT='1.8.0';
NGINX_PREFIX='/etc/nginx';
SRC_DIR='/usr/local/src';
HOME=`dirname $(realpath $0)`;

#------------------------------------------------------------------------------
# MAIN
#------------------------------------------------------------------------------

# verify os
if [ -f /etc/redhat-release ]; then
  REDHAT_RELEASE=$(grep -Eo "[0-9.]+" /etc/redhat-release \
    | awk -F. '{print $1 "." $2}');
else
  echo "==> ERROR: Unsupported operating system";
  exit 1;
fi

# set nginx release
if [ ! -z ${ver} ]; then
  NGINX_RELEASE=${ver};
else
  NGINX_RELEASE=${NGINX_DEFAULT};
fi

# default uninstall nginx
if [ -z ${app} ]; then
  app='uninstall';
fi

# nginx app uninstall
case ${app} in
  uninstall)
    echo "==> Uninstalling nginx";
    svc_ctrl stop nginx;
    if [[ $(echo "${REDHAT_RELEASE}>=7.0" | bc) == 0 ]]; then
      # redhat release < 7.0
      chkconfig nginx off;
      rm -f /etc/init.d/nginx;
    else
      # redhat release >= 7.0
      systemctl disable nginx;
      rm -f /lib/systemd/system/nginx.service;
      systemctl daemon-reload;
    fi
    rm -rf ${SRC_DIR}/nginx/nginx-${NGINX_RELEASE};
    rm -rf ${NGINX_PREFIX};
    rm -f /sbin/nginx;
    # status
    echo 'OK: nginx has been uninstalled';
    ;;
esac
